--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

bit32 = {};
local N = 32;
local P = 2 ^ N;
bit32.bnot = function(x)
	x = x % P;
	return (P - 1) - x;
end;
bit32.band = function(x, y)
	if (y == 255) then
		return x % 256;
	end
	if (y == 65535) then
		return x % 65536;
	end
	if (y == 4294967295) then
		return x % 4294967296;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 2) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bor = function(x, y)
	if (y == 255) then
		return (x - (x % 256)) + 255;
	end
	if (y == 65535) then
		return (x - (x % 65536)) + 65535;
	end
	if (y == 4294967295) then
		return 4294967295;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) >= 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bxor = function(x, y)
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.lshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount < 0) then
		return math.floor(x * (2 ^ s_amount));
	else
		return (x * (2 ^ s_amount)) % P;
	end
end;
bit32.rshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		return math.floor(x * (2 ^ -s_amount));
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
bit32.arshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		local add = 0;
		if (x >= (P / 2)) then
			add = P - (2 ^ (N - s_amount));
		end
		return math.floor(x * (2 ^ -s_amount)) + add;
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v81 = v2(v0(v30, 16));
			if v19 then
				local v90 = v5(v81, v19);
				v19 = nil;
				return v90;
			else
				return v81;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v82 = (v31 / (((1642 - (1523 + 114)) - 3) ^ (v32 - (2 - (1 + 0))))) % (((3 - 0) - (1066 - (68 + 997))) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - ((2127 - (226 + 1044)) + (322 - 248)))));
			return v82 - (v82 % (569 - (367 + 201)));
		else
			local v83 = (929 - (214 + 713)) ^ (v32 - (1 + 0));
			return (((v31 % (v83 + v83)) >= v83) and (1 + 0)) or (877 - (282 + 595));
		end
	end
	local function v21()
		local v34 = 0 + 0;
		local v35;
		while true do
			if (v34 == (118 - (32 + 85))) then
				return v35;
			end
			if (v34 == (0 - 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1 - 0);
				v34 = 1 + (350 - (87 + 263));
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (182 - (67 + 113)));
		v18 = v18 + 2 + 0;
		return (v37 * (628 - 372)) + v36;
	end
	local function v23()
		local v38 = 0;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (0 + 0)) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + (11 - 8));
				v18 = v18 + (956 - (802 + 88 + 62));
				v38 = (2 - 0) - 1;
			end
			if (v38 == (1 - 0)) then
				return (v42 * (12211951 + 4565265)) + (v41 * (66533 - (915 + 82))) + (v40 * (724 - 468)) + v39;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = 1;
		local v46 = (v20(v44, (378 + 810) - (1069 + 118), 20) * (2 ^ (72 - 40))) + v43;
		local v47 = v20(v44, 45 - 24, 6 + 21 + 4);
		local v48 = ((v20(v44, 56 - 24) == (1 + 0)) and -(773 - (201 + 571))) or ((1930 - (116 + 1022)) - (368 + 423));
		if (v47 == (0 - 0)) then
			if (v46 == (18 - (10 + 8))) then
				return v48 * (0 - 0);
			else
				v47 = 443 - (416 + 26);
				v45 = 0;
			end
		elseif (v47 == (6535 - 4488)) then
			return ((v46 == (0 + 0)) and (v48 * ((1 - 0) / (438 - (145 + 293))))) or (v48 * NaN);
		end
		return v8(v48, v47 - (1453 - (44 + 386))) * (v45 + (v46 / ((1488 - (998 + 488)) ^ 52)));
	end
	local function v25(v49)
		local v50;
		if not v49 then
			v49 = v23();
			if (v49 == 0) then
				return "";
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (4 - 3));
		v18 = v18 + v49;
		local v51 = {};
		for v65 = 1 + 0, #v50 do
			v51[v65] = v2(v1(v3(v50, v65, v65)));
		end
		return v6(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = 0;
		local v53;
		local v54;
		local v55;
		local v56;
		local v57;
		local v58;
		while true do
			if (v52 == (1 + 0)) then
				local v86 = 651 - (494 + 157);
				local v87;
				while true do
					if (v86 ~= 0) then
					else
						v87 = 0;
						while true do
							if (v87 ~= (0 - 0)) then
							else
								v57 = v23();
								v58 = {};
								v87 = 1;
							end
							if (v87 ~= (2 + 0)) then
							else
								v52 = 1 + 1;
								break;
							end
							if (v87 == 1) then
								for v107 = 1 + 0, v57 do
									local v108 = 0;
									local v109;
									local v110;
									local v111;
									while true do
										if (v108 == 1) then
											v111 = nil;
											while true do
												if (v109 == 1) then
													if (v110 == (837 - (660 + 176))) then
														v111 = v21() ~= 0;
													elseif (v110 == 2) then
														v111 = v24();
													elseif (v110 ~= (1 + 2)) then
													else
														v111 = v25();
													end
													v58[v107] = v111;
													break;
												end
												if ((202 - (14 + 188)) == v109) then
													v110 = v21();
													v111 = nil;
													v109 = 676 - (534 + 141);
												end
											end
											break;
										end
										if (v108 ~= 0) then
										else
											v109 = 0 + 0;
											v110 = nil;
											v108 = 1;
										end
									end
								end
								v56[3] = v21();
								v87 = 2;
							end
						end
						break;
					end
				end
			end
			if (v52 ~= (2 + 0)) then
			else
				for v91 = 1, v23() do
					local v92 = 0;
					local v93;
					while true do
						if (v92 == (0 + 0)) then
							v93 = v21();
							if (v20(v93, 1 - 0, 1) == (0 - 0)) then
								local v103 = 0;
								local v104;
								local v105;
								local v106;
								while true do
									if (1 ~= v103) then
									else
										local v112 = 0;
										while true do
											if (v112 == 0) then
												v106 = {v22(),v22(),nil,nil};
												if (v104 == (0 + 0)) then
													local v148 = 0;
													local v149;
													while true do
														if (v148 == (396 - (115 + 281))) then
															v149 = 0 - 0;
															while true do
																if (v149 ~= (0 + 0)) then
																else
																	v106[7 - 4] = v22();
																	v106[14 - 10] = v22();
																	break;
																end
															end
															break;
														end
													end
												elseif (v104 == 1) then
													v106[3] = v23();
												elseif (v104 == (869 - (550 + 317))) then
													v106[3] = v23() - (2 ^ 16);
												elseif (v104 ~= (3 - 0)) then
												else
													local v452 = 0;
													local v453;
													while true do
														if (v452 ~= 0) then
														else
															v453 = 0 - 0;
															while true do
																if ((0 - 0) == v453) then
																	v106[3] = v23() - ((287 - (134 + 151)) ^ (1681 - (970 + 695)));
																	v106[7 - 3] = v22();
																	break;
																end
															end
															break;
														end
													end
												end
												v112 = 1;
											end
											if (v112 ~= (1991 - (582 + 1408))) then
											else
												v103 = 2;
												break;
											end
										end
									end
									if (v103 == (0 - 0)) then
										local v113 = 0 - 0;
										local v114;
										while true do
											if (v113 ~= (0 - 0)) then
											else
												v114 = 1824 - (1195 + 629);
												while true do
													if (0 == v114) then
														v104 = v20(v93, 2, 3 - 0);
														v105 = v20(v93, 245 - (187 + 54), 786 - (162 + 618));
														v114 = 1 + 0;
													end
													if (v114 == 1) then
														v103 = 1;
														break;
													end
												end
												break;
											end
										end
									end
									if (v103 == 2) then
										if (v20(v105, 1 + 0, 1) ~= (1 - 0)) then
										else
											v106[2] = v58[v106[2 - 0]];
										end
										if (v20(v105, 1 + 1, 1638 - (1373 + 263)) == (1001 - (451 + 549))) then
											v106[1 + 2] = v58[v106[3]];
										end
										v103 = 4 - 1;
									end
									if (v103 == 3) then
										if (v20(v105, 3, 3) ~= (1 - 0)) then
										else
											v106[4] = v58[v106[1388 - (746 + 638)]];
										end
										v53[v91] = v106;
										break;
									end
								end
							end
							break;
						end
					end
				end
				for v94 = 1 + 0, v23() do
					v54[v94 - 1] = v28();
				end
				return v56;
			end
			if (v52 ~= (0 - 0)) then
			else
				local v88 = 341 - (218 + 123);
				local v89;
				while true do
					if (0 == v88) then
						v89 = 0;
						while true do
							if (2 == v89) then
								v52 = 1582 - (1535 + 46);
								break;
							end
							if (v89 == (1 + 0)) then
								v55 = {};
								v56 = {v53,v54,nil,v55};
								v89 = 2;
							end
							if (v89 == (0 + 0)) then
								v53 = {};
								v54 = {};
								v89 = 1 - 0;
							end
						end
						break;
					end
				end
			end
		end
	end
	local function v29(v59, v60, v61)
		local v62 = v59[1];
		local v63 = v59[2];
		local v64 = v59[3];
		return function(...)
			local v67 = v62;
			local v68 = v63;
			local v69 = v64;
			local v70 = v27;
			local v71 = 1;
			local v72 = -1;
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - 1;
			local v76 = {};
			local v77 = {};
			for v84 = 0, v75 do
				if (v84 >= v69) then
					v73[v84 - v69] = v74[v84 + 1];
				else
					v77[v84] = v74[v84 + 1];
				end
			end
			local v78 = (v75 - v69) + 1;
			local v79;
			local v80;
			while true do
				local v85 = 0;
				while true do
					if (0 == v85) then
						v79 = v67[v71];
						v80 = v79[1];
						v85 = 1;
					end
					if (v85 == 1) then
						if (v80 <= 29) then
							if (v80 <= 14) then
								if (v80 <= 6) then
									if (v80 <= 2) then
										if (v80 <= 0) then
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v60[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v71 = v71 + 1;
											v79 = v67[v71];
											v71 = v79[3];
										elseif (v80 > 1) then
											v77[v79[2]] = v61[v79[3]];
										else
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v60[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] - v79[4];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] - v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											do
												return v77[v79[2]];
											end
											v71 = v71 + 1;
											v79 = v67[v71];
											v71 = v79[3];
										end
									elseif (v80 <= 4) then
										if (v80 == 3) then
											local v156 = v79[2];
											do
												return v13(v77, v156, v156 + v79[3]);
											end
										else
											v77[v79[2]] = v77[v79[3]] + v77[v79[4]];
										end
									elseif (v80 == 5) then
										if (v79[2] < v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									else
										v77[v79[2]] = -v77[v79[3]];
									end
								elseif (v80 <= 10) then
									if (v80 <= 8) then
										if (v80 == 7) then
											v61[v79[3]] = v77[v79[2]];
										else
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
										end
									elseif (v80 > 9) then
										v77[v79[2]][v79[3]] = v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = {};
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]][v79[3]] = v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
									else
										local v168 = 0;
										local v169;
										while true do
											if (v168 == 0) then
												v169 = v79[2];
												v77[v169] = v77[v169](v77[v169 + 1]);
												break;
											end
										end
									end
								elseif (v80 <= 12) then
									if (v80 == 11) then
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										do
											return v77[v79[2]];
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3];
									else
										local v174 = 0;
										local v175;
										while true do
											if (0 == v174) then
												v175 = v79[2];
												do
													return v77[v175](v13(v77, v175 + 1, v79[3]));
												end
												break;
											end
										end
									end
								elseif (v80 == 13) then
									local v176 = 0;
									local v177;
									while true do
										if (v176 == 4) then
											v177 = v79[2];
											v77[v177] = v77[v177](v77[v177 + 1]);
											v71 = v71 + 1;
											v79 = v67[v71];
											v176 = 5;
										end
										if (v176 == 6) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] / v79[4];
											v71 = v71 + 1;
											v176 = 7;
										end
										if (v176 == 8) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v176 = 9;
										end
										if (v176 == 0) then
											v177 = nil;
											v77[v79[2]] = v77[v79[3]] % v79[4];
											v71 = v71 + 1;
											v79 = v67[v71];
											v176 = 1;
										end
										if (v176 == 5) then
											v77[v79[2]] = v61[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]][v79[4]];
											v176 = 6;
										end
										if (v176 == 9) then
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v176 = 10;
										end
										if (2 == v176) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]][v79[4]];
											v71 = v71 + 1;
											v176 = 3;
										end
										if (v176 == 1) then
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v61[v79[3]];
											v176 = 2;
										end
										if (v176 == 3) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] / v79[4];
											v71 = v71 + 1;
											v79 = v67[v71];
											v176 = 4;
										end
										if (v176 == 10) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v71 = v79[3];
											break;
										end
										if (v176 == 7) then
											v79 = v67[v71];
											v177 = v79[2];
											v77[v177] = v77[v177](v77[v177 + 1]);
											v71 = v71 + 1;
											v176 = 8;
										end
									end
								else
									v77[v79[2]] = v77[v79[3]] - v79[4];
								end
							elseif (v80 <= 21) then
								if (v80 <= 17) then
									if (v80 <= 15) then
										local v127;
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v127 = v79[2];
										do
											return v77[v127](v13(v77, v127 + 1, v79[3]));
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v127 = v79[2];
										do
											return v13(v77, v127, v72);
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3];
									elseif (v80 > 16) then
										local v179;
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = -v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v179 = v79[2];
										v77[v179] = v77[v179](v77[v179 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] + v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										do
											return v77[v79[2]];
										end
									else
										local v185;
										v77[v79[2]] = v77[v79[3]] % v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] / v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v185 = v79[2];
										v77[v185] = v77[v185](v77[v185 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] / v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v185 = v79[2];
										v77[v185] = v77[v185](v77[v185 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
									end
								elseif (v80 <= 19) then
									if (v80 > 18) then
										if (v77[v79[2]] <= v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
									else
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										do
											return v77[v79[2]];
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3];
									end
								elseif (v80 == 20) then
									local v198 = v79[2];
									local v199 = {};
									for v302 = 1, #v76 do
										local v303 = v76[v302];
										for v314 = 0, #v303 do
											local v315 = v303[v314];
											local v316 = v315[1];
											local v317 = v315[2];
											if ((v316 == v77) and (v317 >= v198)) then
												local v419 = 0;
												while true do
													if (v419 == 0) then
														v199[v317] = v316[v317];
														v315[1] = v199;
														break;
													end
												end
											end
										end
									end
								else
									v77[v79[2]] = v77[v79[3]];
								end
							elseif (v80 <= 25) then
								if (v80 <= 23) then
									if (v80 == 22) then
										v77[v79[2]] = v79[3] * v77[v79[4]];
									else
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
									end
								elseif (v80 == 24) then
									if (v77[v79[2]] == v79[4]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								else
									v77[v79[2]] = v79[3] ^ v77[v79[4]];
								end
							elseif (v80 <= 27) then
								if (v80 > 26) then
									v77[v79[2]] = v77[v79[3]] % v79[4];
								else
									local v206 = 0;
									local v207;
									while true do
										if (v206 == 4) then
											v71 = v71 + 1;
											v79 = v67[v71];
											if (v77[v79[2]] <= v77[v79[4]]) then
												v71 = v71 + 1;
											else
												v71 = v79[3];
											end
											break;
										end
										if (v206 == 0) then
											v207 = nil;
											v77[v79[2]] = v77[v79[3]][v79[4]];
											v71 = v71 + 1;
											v206 = 1;
										end
										if (3 == v206) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v60[v79[3]];
											v206 = 4;
										end
										if (v206 == 2) then
											v79 = v67[v71];
											v207 = v79[2];
											v77[v207] = v77[v207](v77[v207 + 1]);
											v206 = 3;
										end
										if (1 == v206) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v206 = 2;
										end
									end
								end
							elseif (v80 > 28) then
								local v208;
								local v209;
								local v210;
								local v211;
								local v212;
								local v213;
								local v214, v215;
								local v216;
								local v217;
								v77[v79[2]] = v77[v79[3]][v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3]][v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v217 = v79[2];
								v216 = v77[v79[3]];
								v77[v217 + 1] = v216;
								v77[v217] = v216[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v61[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v217 = v79[2];
								v214, v215 = v70(v77[v217](v77[v217 + 1]));
								v72 = (v215 + v217) - 1;
								v213 = 0;
								for v304 = v217, v72 do
									local v305 = 0;
									while true do
										if (v305 == 0) then
											v213 = v213 + 1;
											v77[v304] = v214[v213];
											break;
										end
									end
								end
								v71 = v71 + 1;
								v79 = v67[v71];
								v217 = v79[2];
								v77[v217](v13(v77, v217 + 1, v72));
								v71 = v71 + 1;
								v79 = v67[v71];
								v217 = v79[2];
								v212 = {};
								for v306 = 1, #v76 do
									v211 = v76[v306];
									for v319 = 0, #v211 do
										v210 = v211[v319];
										v209 = v210[1];
										v208 = v210[2];
										if ((v209 == v77) and (v208 >= v217)) then
											v212[v208] = v209[v208];
											v210[1] = v212;
										end
									end
								end
								v71 = v71 + 1;
								v79 = v67[v71];
								do
									return;
								end
							else
								local v227 = 0;
								local v228;
								while true do
									if (v227 == 2) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v227 = 3;
									end
									if (0 == v227) then
										v228 = nil;
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v227 = 1;
									end
									if (1 == v227) then
										v77[v79[2]] = -v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v227 = 2;
									end
									if (4 == v227) then
										v79 = v67[v71];
										v228 = v79[2];
										do
											return v13(v77, v228, v72);
										end
										v71 = v71 + 1;
										v227 = 5;
									end
									if (v227 == 3) then
										v79 = v67[v71];
										v228 = v79[2];
										do
											return v77[v228](v13(v77, v228 + 1, v79[3]));
										end
										v71 = v71 + 1;
										v227 = 4;
									end
									if (v227 == 5) then
										v79 = v67[v71];
										v71 = v79[3];
										break;
									end
								end
							end
						elseif (v80 <= 44) then
							if (v80 <= 36) then
								if (v80 <= 32) then
									if (v80 <= 30) then
										local v133;
										v77[v79[2]] = v77[v79[3]] % v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] / v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v133 = v79[2];
										v77[v133] = v77[v133](v77[v133 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] / v79[4];
										v71 = v71 + 1;
										v79 = v67[v71];
										v133 = v79[2];
										v77[v133] = v77[v133](v77[v133 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3];
									elseif (v80 == 31) then
										v77[v79[2]] = {};
										v71 = v71 + 1;
										v79 = v67[v71];
										v61[v79[3]] = v77[v79[2]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v61[v79[3]];
									else
										local v233 = 0;
										local v234;
										while true do
											if (v233 == 0) then
												v234 = v79[2];
												do
													return v13(v77, v234, v72);
												end
												break;
											end
										end
									end
								elseif (v80 <= 34) then
									if (v80 == 33) then
										local v235 = v79[2];
										local v236 = v77[v235 + 2];
										local v237 = v77[v235] + v236;
										v77[v235] = v237;
										if (v236 > 0) then
											if (v237 <= v77[v235 + 1]) then
												v71 = v79[3];
												v77[v235 + 3] = v237;
											end
										elseif (v237 >= v77[v235 + 1]) then
											v71 = v79[3];
											v77[v235 + 3] = v237;
										end
									else
										v77[v79[2]] = v77[v79[3]] + v79[4];
									end
								elseif (v80 > 35) then
									if (v79[2] <= v77[v79[4]]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								else
									local v240 = v79[2];
									v77[v240](v13(v77, v240 + 1, v72));
								end
							elseif (v80 <= 40) then
								if (v80 <= 38) then
									if (v80 == 37) then
										do
											return v77[v79[2]];
										end
									else
										v77[v79[2]] = v79[3] ^ v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] * v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										do
											return v77[v79[2]];
										end
										v71 = v71 + 1;
										v79 = v67[v71];
										v71 = v79[3];
									end
								elseif (v80 > 39) then
									v71 = v79[3];
								elseif (v79[2] == v77[v79[4]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif (v80 <= 42) then
								if (v80 > 41) then
									local v246 = 0;
									local v247;
									local v248;
									local v249;
									while true do
										if (v246 == 1) then
											v249 = {};
											v248 = v10({}, {__index=function(v429, v430)
												local v431 = v249[v430];
												return v431[1][v431[2]];
											end,__newindex=function(v432, v433, v434)
												local v435 = v249[v433];
												v435[1][v435[2]] = v434;
											end});
											v246 = 2;
										end
										if (2 == v246) then
											for v437 = 1, v79[4] do
												local v438 = 0;
												local v439;
												while true do
													if (v438 == 1) then
														if (v439[1] == 21) then
															v249[v437 - 1] = {v77,v439[3]};
														else
															v249[v437 - 1] = {v60,v439[3]};
														end
														v76[#v76 + 1] = v249;
														break;
													end
													if (v438 == 0) then
														v71 = v71 + 1;
														v439 = v67[v71];
														v438 = 1;
													end
												end
											end
											v77[v79[2]] = v29(v247, v248, v61);
											break;
										end
										if (v246 == 0) then
											v247 = v68[v79[3]];
											v248 = nil;
											v246 = 1;
										end
									end
								else
									local v250;
									v77[v79[2]] = v77[v79[3]][v79[4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v250 = v79[2];
									v77[v250] = v77[v250](v77[v250 + 1]);
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v60[v79[3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									if (v77[v79[2]] <= v77[v79[4]]) then
										v71 = v71 + 1;
									else
										v71 = v79[3];
									end
								end
							elseif (v80 == 43) then
								local v258 = 0;
								local v259;
								while true do
									if (v258 == 0) then
										v259 = nil;
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v258 = 1;
									end
									if (v258 == 3) then
										v71 = v71 + 1;
										v79 = v67[v71];
										if (v77[v79[2]] <= v77[v79[4]]) then
											v71 = v71 + 1;
										else
											v71 = v79[3];
										end
										break;
									end
									if (v258 == 1) then
										v77[v79[2]] = v77[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v259 = v79[2];
										v258 = 2;
									end
									if (2 == v258) then
										v77[v259] = v77[v259](v77[v259 + 1]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[3]];
										v258 = 3;
									end
								end
							else
								local v260;
								local v261;
								local v262;
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v60[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v262 = v79[2];
								v261 = v77[v262];
								v260 = v77[v262 + 2];
								if (v260 > 0) then
									if (v261 > v77[v262 + 1]) then
										v71 = v79[3];
									else
										v77[v262 + 3] = v261;
									end
								elseif (v261 < v77[v262 + 1]) then
									v71 = v79[3];
								else
									v77[v262 + 3] = v261;
								end
							end
						elseif (v80 <= 51) then
							if (v80 <= 47) then
								if (v80 <= 45) then
									local v142 = 0;
									local v143;
									local v144;
									local v145;
									local v146;
									while true do
										if (v142 == 1) then
											v72 = (v145 + v143) - 1;
											v146 = 0;
											v142 = 2;
										end
										if (v142 == 2) then
											for v326 = v143, v72 do
												v146 = v146 + 1;
												v77[v326] = v144[v146];
											end
											break;
										end
										if (v142 == 0) then
											v143 = v79[2];
											v144, v145 = v70(v77[v143](v77[v143 + 1]));
											v142 = 1;
										end
									end
								elseif (v80 > 46) then
									v77[v79[2]] = v60[v79[3]];
								else
									v77[v79[2]] = v77[v79[3]] - v77[v79[4]];
								end
							elseif (v80 <= 49) then
								if (v80 == 48) then
									v77[v79[2]][v79[3]] = v77[v79[4]];
								else
									local v275 = 0;
									while true do
										if (v275 == 3) then
											v77[v79[2]] = v79[3];
											break;
										end
										if (v275 == 1) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
											v71 = v71 + 1;
											v275 = 2;
										end
										if (v275 == 0) then
											v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[2]] = v60[v79[3]];
											v275 = 1;
										end
										if (v275 == 2) then
											v79 = v67[v71];
											v77[v79[2]] = v77[v79[3]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v275 = 3;
										end
									end
								end
							elseif (v80 > 50) then
								v77[v79[2]] = v77[v79[3]] / v79[4];
							else
								v77[v79[2]] = v77[v79[3]][v79[4]];
							end
						elseif (v80 <= 55) then
							if (v80 <= 53) then
								if (v80 > 52) then
									v77[v79[2]] = v79[3];
								else
									local v281 = 0;
									local v282;
									local v283;
									local v284;
									while true do
										if (v281 == 0) then
											v282 = v79[2];
											v283 = v77[v282];
											v281 = 1;
										end
										if (v281 == 1) then
											v284 = v77[v282 + 2];
											if (v284 > 0) then
												if (v283 > v77[v282 + 1]) then
													v71 = v79[3];
												else
													v77[v282 + 3] = v283;
												end
											elseif (v283 < v77[v282 + 1]) then
												v71 = v79[3];
											else
												v77[v282 + 3] = v283;
											end
											break;
										end
									end
								end
							elseif (v80 == 54) then
								v77[v79[2]] = {};
							else
								local v286 = v79[2];
								local v287 = v77[v79[3]];
								v77[v286 + 1] = v287;
								v77[v286] = v287[v79[4]];
							end
						elseif (v80 <= 57) then
							if (v80 > 56) then
								if (v77[v79[2]] < v79[4]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							else
								local v291;
								local v292;
								local v293;
								v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v60[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3]] % v77[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v60[v79[3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v293 = v79[2];
								v292 = v77[v293];
								v291 = v77[v293 + 2];
								if (v291 > 0) then
									if (v292 > v77[v293 + 1]) then
										v71 = v79[3];
									else
										v77[v293 + 3] = v292;
									end
								elseif (v292 < v77[v293 + 1]) then
									v71 = v79[3];
								else
									v77[v293 + 3] = v292;
								end
							end
						elseif (v80 > 58) then
							for v309 = v79[2], v79[3] do
								v77[v309] = nil;
							end
						else
							do
								return;
							end
						end
						v71 = v71 + 1;
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);